@page "/register"
<h3>Register</h3>
@inject IAuthService AuthService
@inject IUriHelper UriHelper

<div class="row">
    <div class="col-md-6">
        <section>
            <form>
                <hr class="text-danger" />
                @if (ShowErrors)
                {
                    <div class="alert alert-danger" role="alert">
                        @foreach (var Error in Errors)
                        {
                            <p>@Error</p>
                        }
                    </div>
                }
                <div class="form-group">
                    <label>Email</label>
                    <input type="email" @bind="Email"class="form-control" placeholder="Email... eg: John@gmail.com"/>
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <input type="password" @bind="@Password" class="form-control" placeholder="Password..."/>
                </div>
                <div class="form-group">
                    <label>ConfirmPassword</label>
                    <input type="password" @bind="ConfirmPassword" class="form-control" placeholder="ConfirmPassword..." />
                </div>
                <div class="form-group">
                    <input type="submit" @onclick="Submit" class="form-control btn btn-success" />
                </div>
            </form>
        </section>
    </div>
</div>

@code {
    public string Email { get; set; }
    public string Password { get; set; }
    public string ConfirmPassword { get; set; }

    private RegisterModel RegisterModel = new RegisterModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    protected async Task Submit()
    {
        RegisterModel model = new RegisterModel { Email = Email, Password = Password, ConfirmPassword = ConfirmPassword };
        var result = await this.AuthService.Register(model);

        if (result.Successful)
        {
            this.UriHelper.NavigateTo("/login");
        }
        else
        {
            ShowErrors = true;
            Errors = result.Errors;
        }
    }
}